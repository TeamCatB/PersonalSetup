version: "3"
services:
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: personal-vpn-container
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SERVERURL=${PERSONAL_URL}
      - SERVERPORT=${PERSONAL_VPN_PORT}
      - PEERS=${PERSONAL_PEERS}
      - PEERDNS=${PERSONAL_DNS_IPV4}
      - INTERNAL_SUBNET=${PERSONAL_SUBNET}
      - ALLOWEDIPS=0.0.0.0/0
      - PERSISTENTKEEPALIVE_PEERS=all
      - LOG_CONFS=true
    volumes:
      - /deploy/personal/wireguard:/config
      - /deploy/personal/modules:/lib/modules
    networks:
      personal-network:
        ipv4_address: ${PERSONAL_VPN_IPV4}
    ports:
      - ${PERSONAL_VPN_PORT}:${PERSONAL_VPN_PORT}/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1  # Enable IP forwarding
      - net.ipv6.conf.all.forwarding=1
    restart: unless-stopped
  unbound:
    container_name: personal-dns-container
    image: "mvance/unbound:latest"
    networks:
      personal-network:
        ipv4_address: ${PERSONAL_DNS_IPV4}
    volumes:
      - /deploy/personal/unbound/a-records.conf:/opt/unbound/etc/unbound/a-records.conf
    restart: unless-stopped
  nextcloud-aio-mastercontainer:
    networks:
      personal-network:
        ipv4_address: ${PERSONAL_NEXTCLOUD_IPV4}
    image: nextcloud/all-in-one:latest
    init: true
    restart: always
    container_name: nextcloud-aio-mastercontainer
    volumes:
      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - APACHE_PORT=11000
      - APACHE_ADDITIONAL_NETWORK=deploy_personal-network
      - APACHE_IP_BINDING=0.0.0.0
    ports:
      - "8080:8080"
  caddy:
    networks:
      - personal-network
      - nextcloud-aio
    build:
      context: ./personal/caddy
      dockerfile: Dockerfile
    restart: always
    container_name: caddy
    volumes:
      - /deploy/personal/caddy:/etc/caddy
      - /deploy/personal/caddy/certs:/certs
      - /deploy/personal/caddy/config:/config
      - /deploy/personal/caddy/data:/data
      - /deploy/personal/caddy/sites:/srv
    ports:
      - "80:80"
      - "443:443"
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /deploy/personal/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    networks:
      - personal-network
  redbot:
    networks:
      - personal-network
    container_name: redbot
    build:
      context: ./personal/redbot
      dockerfile: Dockerfile
      args:
        BOT_NAME: ${BOT_NAME}
  vtt:
    networks:
      - personal-network
    container_name: vtt
    hostname: vtt
    build:
      context: ./personal/vtt
      dockerfile: Dockerfile
      args:
        FOUNDRY_USERNAME: ${FOUNDRY_USERNAME}
        FOUNDRY_PASSWORD: ${FOUNDRY_PASSWORD}
    volumes:
      - /deploy/personal/vtt12/data:/root/.local/share
  invidious:
    container_name: invidious
    networks:
      - personal-network
    image: quay.io/invidious/invidious:latest
    # image: quay.io/invidious/invidious:latest-arm64 # ARM64/AArch64 devices
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Please read the following file for a comprehensive list of all available
      # configuration options and their associated syntax:
      # https://github.com/iv-org/invidious/blob/master/config/config.example.yml
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: kemal
          password: kemal
          host: invidious-db
          port: 5432
        check_tables: true
        signature_server: inv_sig_helper:12999
        visitor_data: "CgtqR0l6Q09JcGFNdyjWs9W-BjIKCgJVUxIEGgAgRA%3D%3D"
        po_token: "MnRv67o1D8-OLW_T2qvsE966YflsKxe0-V8uelF4hJ5x7gGLLUa3Ls_2KB7Ss9LrmRmccjiTqrs64Ge_C3RzyQk5kWGeWMN_khUQGF-oGDPO3jxX79nc95jk_Q-57e1w9BHtgMbNzo_0VQvEiN542VqBkHu3Nw=="
        # external_port:
        # domain:
        # https_only: false
        # statistics_enabled: false
        hmac_key: "ieshe8shep0Fohsho9aD"
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    depends_on:
      - invidious-db

  inv_sig_helper:
    networks:
      - personal-network
    image: quay.io/invidious/inv-sig-helper:latest
    init: true
    command: ["--tcp", "0.0.0.0:12999"]
    environment:
      - RUST_LOG=info
    restart: unless-stopped
    cap_drop:
      - ALL
    read_only: true
    security_opt:
      - no-new-privileges:true

  invidious-db:
    networks:
      - personal-network
    image: docker.io/library/postgres:14
    restart: unless-stopped
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: kemal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
networks:
  personal-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${PERSONAL_IPAM_SUBNET}/24
  nextcloud-aio:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NEXTCLOUD_IPAM_SUBNET}/24
volumes:
  mydata:
  nextcloud_aio_mastercontainer:
    name: nextcloud_aio_mastercontainer
  postgresdata: